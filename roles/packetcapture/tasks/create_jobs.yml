---
- name: "Create Jobs"
  kubernetes.core.k8s:
    definition:
      api_version: batch/v1
      kind: Job
      metadata:
        labels:
          app.kubernetes.io/name: packet-capture
          app.kubernetes.io/instance: "{{ targetNamespace }}-{{ targetDeployment }}"
          app.kubernetes.io/part-of: packet-capture-operator
          app.kubernetes.io/managed-by: kustomize
          app.kubernetes.io/created-by: packet-capture-operator
        name: "{{ pod.name }}-{{ jobId }}"
        namespace: "{{ packetCaptureNamespace }}"
      spec:
        template:
#          activeDeadlineSeconds: "{{ duration | int }}"  -- Will need to calculate this if we can
          backoffLimit: "{{ backoffLimit }}"
          spec:
            volumes:
              - name: tcpdump-script
                configMap:
                  name: "{{ targetNamespace }}-{{ targetDeployment }}"
                  defaultMode: 0777
            containers:
            - name: tcpdump
              image: registry.redhat.io/rhel8/support-tools
              command: ["/bin/bash", "-c", "/tmp/config/script.sh"]
              securityContext:
                privileged: true
              volumeMounts:
                - mountPath: /tmp/config
                  name: tcpdump-script
            restartPolicy: "{{ restartPolicy }}"
            nodeSelector:
              kubernetes.io/hostname: "{{ pod.node }}"
    state: "{{ state }}"
  loop: "{{ pods }}"
  loop_control:
    loop_var: pod
    label: "Job: {{ pod.name }}-{{ jobId }}"
  ignore_errors: true